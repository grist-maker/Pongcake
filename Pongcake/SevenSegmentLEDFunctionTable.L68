003BE102 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 10/14/2022 4:31:16 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : Seven Segment LED Score Counter - Pongcake
00000000                             3  * Written by : Gabrielle Tristani
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  * D0-d4 are used by trap commands
00000000                             7  *-----------------------------------------------------------
00000000                             8  ;    ORG    $1000
00000000                             9  StartOfLED:
00000000  7050                      10      move.l #80, d0
00000002  7200                      11      move.l #$00000000, d1 ;Set pen color to black
00000004  4E4F                      12      TRAP #15
00000006                            13      
00000006  7051                      14      move.l #81, d0
00000008  7200                      15      move.l #$00000000, d1 ;Set fill color to black
0000000A  4E4F                      16      TRAP #15
0000000C                            17      
0000000C  7057                      18      move.l #87,d0 ;Wipes current score bar
0000000E  323C 0000                 19      move.w #0, d1
00000012  343C 0000                 20      move.w #0, d2
00000016  363C 02BC                 21      move.w #700, d3
0000001A  383C 0096                 22      move.w #150, d4
0000001E  4E4F                      23      TRAP #15
00000020                            24      
00000020  4EF9 0000034E             25      jmp Finish
00000026                            26      
00000026                            27  
00000026                            28  SetValues: 
00000026  264F                      29      move.l sp,a3
00000028  DFFC 0000009C             30      add.l #156,sp
0000002E                            31      
0000002E  2A17                      32      move.l (sp),d5 ;Current value is saved in d5
00000030                            33      
00000030  BABC 0000000A             34      cmp.l #10,d5
00000036  6F00 0018                 35      ble GetPrintTableIndex
0000003A                            36      
0000003A                            37  ZeroValue:
0000003A  2EBC 00000000             38      move.l #0,(sp)
00000040  069F 00000000             39      add.l #0,(sp)+
00000046  5297                      40      add.l #1,(sp)
00000048  06A7 00000000             41      add.l #0,-(sp)
0000004E  7A00                      42      move.l #0,d5
00000050                            43      
00000050                            44  GetPrintTableIndex:
00000050  DFFC 0000000C             45      add.l #12,sp ;number of pixels incremented from base value for target digit is saved to d6
00000056  2C17                      46      move.l (sp),d6
00000058                            47      
00000058  41F9 00000326             48      lea PrintTable,a0 ;We load PrintTable into a0, then pointer to address of function that prints value we want to print into d1
0000005E                            49      
0000005E  CAFC 0004                 50      mulu.w #4,d5
00000062  2205                      51      move.l d5,d1
00000064  8AFC 0004                 52      divu.w #4,d5
00000068                            53      
00000068  2070 1000                 54      move.l (a0,d1),a0
0000006C                            55      
0000006C                            56  CyclingValues:
0000006C  2410                      57      move.l (a0),d2 ;Moves the next branch into d2
0000006E                            58      
0000006E  0698 00000000             59      add.l #0,(a0)+ ;goes to next index
00000074                            60      
00000074  B4BC 00000000             61      cmp.l #0,d2
0000007A                            62      
0000007A  6700 000C                 63      beq EndCycle ;get out if 0 is set here
0000007E                            64      
0000007E  2242                      65      move.l d2,a1 ;We jump to correct printer function
00000080  4FF9 00FFFF64             66      lea $00FFFF64,sp
00000086  4E91                      67      jsr (a1)
00000088                            68      
00000088                            69  EndCycle:
00000088  B4BC 00000000             70      cmp.l #0,d2
0000008E  66DC                      71      bne CyclingValues
00000090                            72      
00000090  2E4B                      73      move.l a3,sp
00000092  4E75                      74      rts
00000094                            75      
00000094                            76  SegmentA:
00000094  7057                      77      move.l #87,d0 ;Draws A segment
00000096  323C 0005                 78      move.w #5, d1
0000009A  D286                      79      add.l d6,d1
0000009C  343C 0000                 80      move.w #0, d2
000000A0  363C 0019                 81      move.w #25, d3
000000A4  D686                      82      add.l d6,d3
000000A6  383C 0005                 83      move.w #5, d4
000000AA  4E4F                      84      TRAP #15
000000AC                            85      
000000AC  4E75                      86      rts
000000AE                            87      
000000AE                            88  SegmentB:
000000AE  7057                      89      move.l #87,d0 ;Draws B segment
000000B0  323C 0019                 90      move.w #25, d1
000000B4  D286                      91      add.l d6,d1
000000B6  343C 0005                 92      move.w #5, d2
000000BA  363C 001E                 93      move.w #30, d3
000000BE  D686                      94      add.l d6,d3
000000C0  383C 0019                 95      move.w #25, d4
000000C4  4E4F                      96      TRAP #15
000000C6                            97      
000000C6  4E75                      98      rts
000000C8                            99      
000000C8                           100  SegmentC:
000000C8  7057                     101      move.l #87,d0 ;Draws C segment
000000CA  323C 0019                102      move.w #25, d1
000000CE  D286                     103      add.l d6,d1
000000D0  343C 001E                104      move.w #30, d2
000000D4  363C 001E                105      move.w #30, d3
000000D8  D686                     106      add.l d6,d3
000000DA  383C 0032                107      move.w #50, d4
000000DE  4E4F                     108      TRAP #15
000000E0                           109      
000000E0  4E75                     110      rts
000000E2                           111      
000000E2                           112  SegmentD:
000000E2  7057                     113      move.l #87,d0 ;Draws D segment
000000E4  323C 0005                114      move.w #5, d1
000000E8  D286                     115      add.l d6,d1
000000EA  343C 0032                116      move.w #50, d2
000000EE  363C 0019                117      move.w #25, d3
000000F2  D686                     118      add.l d6,d3
000000F4  383C 0037                119      move.w #55, d4
000000F8  4E4F                     120      TRAP #15
000000FA                           121      
000000FA  4E75                     122      rts
000000FC                           123      
000000FC                           124  SegmentE:
000000FC  7057                     125      move.l #87,d0 ;Draws E segment
000000FE  323C 0000                126      move.w #0, d1
00000102  D286                     127      add.l d6,d1
00000104  343C 001E                128      move.w #30, d2
00000108  363C 0005                129      move.w #5, d3
0000010C  D686                     130      add.l d6,d3
0000010E  383C 0032                131      move.w #50, d4
00000112  4E4F                     132      TRAP #15
00000114                           133      
00000114  4E75                     134      rts
00000116                           135      
00000116                           136  SegmentF:
00000116  7057                     137      move.l #87,d0 ;Draws F segment
00000118  323C 0000                138      move.w #0, d1
0000011C  D286                     139      add.l d6,d1
0000011E  343C 0005                140      move.w #5, d2
00000122  363C 0005                141      move.w #5, d3
00000126  D686                     142      add.l d6,d3
00000128  383C 0019                143      move.w #25, d4
0000012C  4E4F                     144      TRAP #15
0000012E                           145      
0000012E  4E75                     146      rts
00000130                           147      
00000130                           148  SegmentG:
00000130  7057                     149      move.l #87,d0 ;Draws G segment
00000132  323C 0005                150      move.w #5, d1
00000136  D286                     151      add.l d6,d1
00000138  343C 0019                152      move.w #25, d2
0000013C  363C 0019                153      move.w #25, d3
00000140  D686                     154      add.l d6,d3
00000142  383C 001E                155      move.w #30, d4
00000146  4E4F                     156      TRAP #15 
00000148                           157      
00000148  4E75                     158      rts  
0000014A                           159      
0000014A                           160  AddScore:
0000014A  4FF9 00FFFFC8            161      lea $00FFFFC8, sp ;Grab current hundreds to see if its 9, continuing to check other values if so
00000150                           162      
00000150  0C97 00000009            163      cmp.l #9,(sp)
00000156  6600 0022                164      bne Valid
0000015A                           165      
0000015A  06A7 00000000            166      add.l #0,-(sp) ;Grab current tens to see if its 9, continuing to check other values if so
00000160                           167      
00000160  0C97 00000009            168      cmp.l #9,(sp)
00000166  6600 0012                169      bne Valid
0000016A                           170      
0000016A  06A7 00000000            171      add.l #0,-(sp) ;Grab current ones to see if its 9, stopping addition to the score if 999 is reached
00000170                           172      
00000170  0C97 00000009            173      cmp.l #9,(sp)
00000176  6700 00B8                174      beq GameLoop
0000017A                           175         
0000017A                           176  Valid:
0000017A  4FF9 00FFFFC0            177      lea $00FFFFC0,sp ;grab current ones
00000180  5297                     178      add.l #1,(sp)
00000182                           179      
00000182  2017                     180      move.l (sp),d0
00000184  069F 00000000            181      add.l #0,(sp)+
0000018A  069F 00000000            182      add.l #0,(sp)+
00000190                           183      
00000190  7050                     184      move.l #80, d0
00000192  7200                     185      move.l #$00000000, d1 ;Set pen color to black
00000194  4E4F                     186      TRAP #15
00000196                           187      
00000196  7051                     188      move.l #81, d0
00000198  7200                     189      move.l #$00000000, d1 ;Set fill color to black
0000019A  4E4F                     190      TRAP #15
0000019C                           191      
0000019C  7057                     192      move.l #87,d0 ;Wipes current score bar
0000019E  323C 0000                193      move.w #0, d1
000001A2  343C 0000                194      move.w #0, d2
000001A6  363C 02BC                195      move.w #700, d3
000001AA  383C 0078                196      move.w #120, d4
000001AE  4E4F                     197      TRAP #15
000001B0                           198      
000001B0  7050                     199      move.l #80, d0
000001B2  223C 0000FF00            200      move.l #$0000FF00, d1 ;Set pen color to green
000001B8  4E4F                     201      TRAP #15
000001BA                           202      
000001BA  7051                     203      move.l #81, d0
000001BC  223C 0000FF00            204      move.l #$0000FF00, d1 ;Set fill color to green
000001C2  4E4F                     205      TRAP #15
000001C4                           206      
000001C4                           207  ScoreInitializer:
000001C4  4FF9 00FFFFD4            208      lea $00FFFFD4, sp 
000001CA  0C97 00000000            209      cmp.l #0,(sp) ;if value has already been initialized, we can just go to PrintScore
000001D0  6700 0040                210      beq PrintScore
000001D4                           211                  
000001D4  4FF9 00FFFFD8            212      lea $00FFFFD8,sp
000001DA  7050                     213      move.l #80, d0
000001DC  223C 0000FF00            214      move.l #$0000FF00, d1 ;Set pen color to green
000001E2  4E4F                     215      TRAP #15
000001E4                           216      
000001E4  7051                     217      move.l #81, d0
000001E6  223C 0000FF00            218      move.l #$0000FF00, d1 ;Set fill color to green
000001EC  4E4F                     219      TRAP #15
000001EE                           220      
000001EE  2F3C 00000000            221      move.l #0,-(sp) ;How many pixels are incremented from base value for hundreds digit FFD4
000001F4  2F3C 00000046            222      move.l #70,-(sp) ;How many pixels are incremented from base value for tens digit FFD0
000001FA  2F3C 0000008C            223      move.l #140,-(sp) ; Pixels incremented from base value for ones digit FFCC
00000200  2F3C 00000000            224      move.l #0,-(sp) ;Curren hundreds value FFC8
00000206  2F3C 00000000            225      move.l #0,-(sp) ;Current tens value FFC4
0000020C  2F3C 00000000            226      move.l #0,-(sp) ;Current ones value FFC0
00000212                           227      
00000212                           228  PrintScore:
00000212  4FF9 00FFFF28            229      lea $00FFFF28,sp
00000218  4EB8 0026                230      jsr SetValues
0000021C                           231      
0000021C  4FF9 00FFFF2C            232      lea $00FFFF2C,sp
00000222  4EB8 0026                233      jsr SetValues
00000226                           234      
00000226  4FF9 00FFFF30            235      lea $00FFFF30,sp
0000022C  4EB8 0026                236      jsr SetValues
00000230                           237      
00000230                           238  GameLoop
00000230  7051                     239      move.l #81, d0
00000232  7200                     240      move.l #$00000000, d1 ;Set fill color to black
00000234  4E4F                     241      TRAP #15
00000236                           242      
00000236  4FF9 00FFFFD8            243      lea $00FFFFD8,sp
0000023C                           244      
0000023C  4E75                     245      rts
0000023E                           246  
0000023E                           247  SegmentFunctionTable:
0000023E                           248                  ZeroPrint:
0000023E= 00000094 000000AE ...    249                      dc.l SegmentA, SegmentB, SegmentC, SegmentD, SegmentE, SegmentF,0 ;Used to print 0
0000025A                           250                  OnePrint:
0000025A= 000000AE 000000C8 ...    251                      dc.l SegmentB,SegmentC,0 ;Used to print 1
00000266                           252                  TwoPrint:
00000266= 00000094 000000AE ...    253                      dc.l SegmentA,SegmentB, SegmentD, SegmentE, SegmentG,0 ;Used to print 2
0000027E                           254                  ThreePrint:
0000027E= 00000094 000000AE ...    255                      dc.l SegmentA,SegmentB,SegmentC,SegmentD,SegmentG,0 ;Used to print 3
00000296                           256                  FourPrint:
00000296= 000000AE 000000C8 ...    257                      dc.l SegmentB,SegmentC,SegmentF,SegmentG,0 ;Used to print 4
000002AA                           258                  FivePrint:
000002AA= 00000094 000000C8 ...    259                      dc.l SegmentA,SegmentC,SegmentD,SegmentG,SegmentF,0 ;Used to print 5
000002C2                           260                  SixPrint:
000002C2= 00000094 000000C8 ...    261                      dc.l SegmentA,SegmentC,SegmentD,SegmentE,SegmentF,SegmentG,0 ;Used to print 6
000002DE                           262                  SevenPrint:
000002DE= 00000094 000000AE ...    263                      dc.l SegmentA,SegmentB,SegmentC,0 ;Used to print 7
000002EE                           264                  EightPrint:
000002EE= 00000094 000000AE ...    265                      dc.l SegmentA,SegmentB,SegmentC,SegmentD,SegmentE,SegmentF,SegmentG,0 ;Used to print 8
0000030E                           266                  NinePrint:
0000030E= 00000094 000000AE ...    267                      dc.l SegmentA,SegmentB,SegmentC,SegmentF,SegmentG,0 ;Used to print 9
00000326                           268                  
00000326                           269  PrintTable:
00000326= 0000023E 0000025A ...    270                  dc.l ZeroPrint,OnePrint,TwoPrint,ThreePrint,FourPrint,FivePrint,SixPrint,SevenPrint,EightPrint,NinePrint
0000034E                           271                  
0000034E                           272  Finish:
0000034E                           273                  
0000034E                           274  ; AAAA
0000034E                           275  ;F    B
0000034E                           276  ;F    B
0000034E                           277  ;F    B
0000034E                           278  ;F    B
0000034E                           279  ; GGGG
0000034E                           280  ;E    C
0000034E                           281  ;E    C
0000034E                           282  ;E    C
0000034E                           283  ;E    C
0000034E                           284  ; DDDD
0000034E                           285  
0000034E                           286      ;Lets say that the score box is displaying 3 digits, each segment being 10 pixels thick and 40 long
0000034E                           287      ;Each digit takes up 60 width and 110 height. Lets put buffer of 10 pixels between adjacent pixels.
0000034E                           288      ;Total score box is thus 210 x 110 in top left corner. So its box is D1.w = 0, D2.w = 0, D3.w = 210, D4.w = 110
0000034E                           289      
0000034E                           290      ;So leftmost digit:
0000034E                           291      ; A has points at D1.w = 10, d2.w = 0, d3.w = 50, and d4.w = 10
0000034E                           292      ; B should be D1.w = 50, d2.w = 10, d3.w = 60, d4.w = 50
0000034E                           293      ; C should be D1.w = 50, d2.w = 60, d3.w = 60, d4.w = 100
0000034E                           294      ; D should be D1.w = 10, d2.w = 100, d3.w = 50, d4.w = 110
0000034E                           295      ; E should be D1.w = 0, d2.w = 60, d3.w = 10, d4.w = 100
0000034E                           296      ; F should be D1.w = 0, d2.w = 10, d3.w = 10, d4.w = 50
0000034E                           297      ; G should be D1.w = 10, d2.w = 50, d3.w = 50, d4.w = 60
0000034E                           298      
0000034E                           299      ;Trap 87 draws a rectangle defined by left x, upper y, right x, and lower y. LX = d1.w, YU = d2.w, RX = d3.w, LY = D4.w
0000034E                           300  
0000034E                           301  
0000034E                           302  
0000034E                           303  
0000034E                           304  
0000034E                           305  
0000034E                           306  
0000034E                           307  
0000034E                           308  
0000034E                           309  
0000034E                           310  
0000034E                           311  
0000034E                           312  
0000034E                           313  
0000034E                           314  
0000034E                           315  
0000034E                           316  
0000034E                           317  
0000034E                           318  
0000034E                           319  
0000034E                           320  
0000034E                           321  
0000034E                           322  
0000034E                           323  
0000034E                           324  
0000034E                           325  
0000034E                           326  
0000034E                           327  
0000034E                           328  
0000034E                           329  
0000034E                           330  
0000034E                           331  
0000034E                           332  
0000034E                           333  
0000034E                           334  
0000034E                           335  
0000034E                           336  
0000034E                           337  
0000034E                           338  
Line 339 WARNING: END directive missing, starting address not set

No errors detected
1 warning generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDSCORE            14A
CYCLINGVALUES       6C
EIGHTPRINT          2EE
ENDCYCLE            88
FINISH              34E
FIVEPRINT           2AA
FOURPRINT           296
GAMELOOP            230
GETPRINTTABLEINDEX  50
NINEPRINT           30E
ONEPRINT            25A
PRINTSCORE          212
PRINTTABLE          326
SCOREINITIALIZER    1C4
SEGMENTA            94
SEGMENTB            AE
SEGMENTC            C8
SEGMENTD            E2
SEGMENTE            FC
SEGMENTF            116
SEGMENTFUNCTIONTABLE  23E
SEGMENTG            130
SETVALUES           26
SEVENPRINT          2DE
SIXPRINT            2C2
STARTOFLED          0
THREEPRINT          27E
TWOPRINT            266
VALID               17A
ZEROPRINT           23E
ZEROVALUE           3A
